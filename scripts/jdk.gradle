

apply plugin: 'de.undercouch.download'

def download32BitJdk = tasks.register('download32BitJdk', Download) {
  src 'https://ci.appveyor.com/api/buildjobs/4ktdb4yv55kpmacg/artifacts/jdk-x86.zip'
  dest buildDir
  overwrite false
}

def jdk32Location = file("$buildDir/jdk32")

def extract32BitJdk = tasks.register('extract32BitJdk', Copy) {
  dependsOn download32BitJdk
  from zipTree(file("$buildDir/jdk-x86.zip")).matching{ include "jdk/**"}
  into jdk32Location
  eachFile { f->
    f.path = f.path.substring(4) // length of jdk/
  }
  exclude '**/src.zip'

  includeEmptyDirs = false
}

def download64BitJdk = tasks.register('download64BitJdk', Download) {
  src 'https://download.java.net/java/early_access/jdk11/26/GPL/openjdk-11-ea+26_windows-x64_bin.zip'
  dest buildDir
  overwrite false
}

def jdk64Location = file("$buildDir/jdk64")

def extract64BitJdk = tasks.register('extract64BitJdk', Copy) {
  dependsOn download64BitJdk
  from zipTree(file("$buildDir/openjdk-11-ea+26_windows-x64_bin.zip")).matching{ include "jdk-11/**"}
  into jdk64Location
  eachFile { f->
    f.path = f.path.substring(7) // length of jdk-11/
  }

  exclude '**/src.zip'

  includeEmptyDirs = false
}

ext.jdkZipSetup = { Zip zip->
  zip.dependsOn extract32BitJdk
  zip.dependsOn extract64BitJdk

  zip.inputs.dir jdk64Location
  zip.inputs.dir jdk32Location

  zip.from(jdk32Location) {
    into '/jdk32'
  }

  zip.from(jdk64Location) {
    into '/jdk64'
  }
}
